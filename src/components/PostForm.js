import React, { Component } from "react";
import axios from "axios";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";

// Loading Assets (SubComponents & CSS)
import "../css/postform.css";
import Loader from "./Loader";
import Response from "./Response";

class PostForm extends Component {
  constructor(props) {
    super(props);
    this.state = {
      name: "My Character",
      loader: false,
      response: false,
      status: false
    };
    this.handleInputChange = this.handleInputChange.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
  }

  handleSubmit() {
    this.props.updateVisible(false);
    this.setState({ loader: true });
    const accesstoken = this.props.accesstoken;
    const stlData = window.export();
    console.log("starting files")
    axios({
      method: "post",
      url: "https://www.myminifactory.com/api/v2/object",
      headers: {
        "Content-Type": "application/json",
        Authorization: "Bearer " + accesstoken
      },
      data: {
        name: this.state.name,
        description:
          "This is a file generated by the Character Customizer (beta) of MyMiniFactory. Give it a try at the following link: www.myminifactory.com/character-creator/",
        tags: "customizer",
        files: [
          {
            filename: "Stand.stl"
            // customizer_metadata: {
            //}
          },
          {
            filename: "Mesh_Torso.stl"
          },
          {
            filename: "Mesh_Arm_L.stl"
          },
          {
            filename: "Mesh_Arm_R.stl"
          },
          {
            filename: "Mesh_Foot_L.stl"
          },
          {
            filename: "Mesh_Foot_R.stl"
          },
          {
            filename: "Mesh_Hand_L.stl"
          },
          {
            filename: "Mesh_Hand_R.stl"
          },
          {
            filename: "Mesh_Head.stl"
          },
          {
            filename: "Mesh_Leg_L.stl"
          },
          {
            filename: "Mesh_Leg_R.stl"
          }
        ]
      }
    }).then(responseMetaData => {
      console.log(responseMetaData)
      const files = responseMetaData.data.files;

      var statusCounter = 0;
      var responseCounter = 0;

      for (var i = 0; i < files.length; i++) {
        var uploadID = files[i].upload_id;
        axios({
          method: "post",
          url:
            "https://www.myminifactory.com/api/v2/file?upload_id=" + uploadID,
          headers: {
            Authorization: "Bearer " + accesstoken
          },
          data: stlData[i]
        }).then(response => {
          // Counting the number of responses
          responseCounter += 1;

          // Counting the number of correct status
          if (response.status === 201) {
            statusCounter += 1;
          }

          if (responseCounter === files.length - 1) {
            console.log("Finished", responseCounter)
            if (statusCounter === files.length - 1) { // all good
              this.setState({ loader: false, response: true }); // No more loader
              setTimeout(() => {
                this.setState({ response: false });
              }, 1500);
            } else { // Something went wrong
              console.log("there was an error")
            }
          }
        });
      }
    });
  }

  handleInputChange(event) {
    this.setState({
      name: event.value
    });
  }

  renderForm() {
    if (this.props.visible) {
      return (
        <div className="screen abs top left">
          <div className="abs form">
            <FontAwesomeIcon
              className="abs cross"
              icon="times-circle"
              onClick={() => {
                this.props.updateVisible(false);
              }}
            />
            <div className="title">
              <h2>Upload to MyMiniFactory</h2>
            </div>
            <label>
              Name:
              <input
                name="name"
                type="text"
                value={this.state.name}
                onChange={this.handleInputChange}
              />
            </label>
            <div className="submit-container">
              <div
                className="buttons"
                value="Submit"
                onClick={this.handleSubmit}
              >
                Submit
              </div>
            </div>
          </div>
        </div>
      );
    }
  }

  render() {
    return (
      <div>
        {this.renderForm()}
        <Loader visible={this.state.loader} />
        <Response visible={this.state.response}  />
      </div>
    );
  }
}

export default PostForm;
