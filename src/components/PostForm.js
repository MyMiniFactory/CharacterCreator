import React, { Component } from "react";
import axios from "axios";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import logo from './../graphic_assets/logo.jpg';
import Popup from "./Popup";

// Loading Assets (SubComponents & CSS)
import "../css/postform.css";
import Loader from "./Loader";
import Response from "./Response";

import * as env from '../config';

class PostForm extends Component {
  constructor(props) {
    super(props);
    this.state = {
      name: "MyCharacter",
      loader: false,
      response: false,
      status: false, 
      popup: false, 
      message: ''
    };
    this.handleInputChange = this.handleInputChange.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
  }

  successMessage = "Your character has been uploaded and will be available soon in your MyMiniFactory account! We're making sure this file is ready to be printed, we will let you know when the file is ready!";
  errorMessage = "Something went wrong during the upload, please try again...";

  updatePopup = popup => {
    this.setState({ popup });
  };

  async handleSubmit(event) {
    event.preventDefault();
    this.props.updateVisible(false);
    this.setState({ loader: true });
    const accesstoken = this.props.accesstoken;
    const stlData = window.export();

    const responseMetaData = await axios({
      method: "post",
      url: `${env.LIVE_MMF_API_ENDPOINT}/object`,
      headers: {
        "Content-Type": "application/json",
        Authorization: "Bearer " + accesstoken
      },
      data: {
        name: this.state.name,
        description:
          "This is a file generated by the Character Customizer (beta) of MyMiniFactory. Give it a try at the following link: www.myminifactory.com/character-creator/",
        tags: "customizer",
        files: [
          {filename: "Stand.stl"},
          {filename: "Mesh_Torso.stl"},
          {filename: "Mesh_Arm_L.stl"},
          {filename: "Mesh_Arm_R.stl"},
          {filename: "Mesh_Foot_L.stl"},
          {filename: "Mesh_Foot_R.stl"},
          {filename: "Mesh_Hand_L.stl"},
          {filename: "Mesh_Hand_R.stl"},
          {filename: "Mesh_Head.stl"},
          {filename: "Mesh_Leg_L.stl"},
          {filename: "Mesh_Leg_R.stl"}
        ]
      }
    });

    const files = responseMetaData.data.files;
    const promises = files.map((file, i) => axios({
      method: "post",
      url: `${env.LIVE_MMF_API_ENDPOINT}/file`,
      headers: {
        Authorization: "Bearer " + accesstoken
      },
      params: {
        upload_id: file.upload_id
      },
      data: stlData[i]
    }));
    const responses = await Promise.all(promises);


    const status = responses.every(response => response.status === 201);
    const message = status ? this.successMessage : this.errorMessage;
    this.setState({
      loader: false,
      response: true,
      status
    });
    setTimeout(() => {
      this.setState({
        response: false,
        popup: true,
        message})
    }, 1500);
  }

  handleInputChange(event) {
    this.setState({
      name: event.target.value
    });
  }

  renderForm() {
    if (this.props.visible) {
      return (
        <div className="screen abs top left">
          <div className="abs popup">
            <FontAwesomeIcon
              className="abs cross"
              icon="times-circle"
              onClick={() => {
                this.props.updateVisible(false);
              }}
            />
            <div className="logotopform">
              <img src={logo} alt="logo"/>
            </div>
            <div className="title">
              <h2>Upload to MyMiniFactory</h2>
            </div>
            <form className="form" onSubmit={this.handleSubmit}>
              <p>Give it a name:</p>
              <input
                className="nameinput"
                  type="text"
                  value={this.state.name}
                  onChange={this.handleInputChange}
                />
              <div className="submit-container">
                <input className="buttons" type="submit" value="Submit" />
              </div>
              
            </form>
          </div>
        </div>
      );
    }
  }
  
  render() {
    return (
      <div>
        {this.renderForm()}
        <Loader visible={this.state.loader} />
        <Response visible={this.state.response} status={this.state.status}  />
        <Popup
            popupDisplayed={this.state.popup}
            message={this.state.message}
            updatePopup={this.updatePopup}
          />
      </div>
    );
  }
}

export default PostForm;
